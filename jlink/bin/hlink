#!/bin/bash

usage() {
    println
    println "Build a custom JRE from an application."
    println
    println "Usage: ${scriptName} [--debug] [--dir] [--jars] <applicationJarPath>"
    println
    exit 0
}

main() {
    init "$@"
    if [[ ${jars} ]]; then
        linkJars
    else
        linkModules
    fi
}

linkModules() {
    ${javaHome}/bin/java ${jvmArgs} -javaagent:${agentJar} --module-path ${jrePath} --module ${jreModule} ${appArgs}
}

linkJars() {
    ${javaHome}/bin/java ${jvmArgs}  -cp ${jrePath} ${jarsMainClass} ${appArgs}
}

init() {
    readonly scriptName=$(basename "${0}")
    readonly binDir=$(dirname "${0}")
    readonly rootDir=$(cd "${binDir}"/..; pwd)
    readonly agentJar="${rootDir}/agent/target/helidon-jre-agent.jar"
    readonly jreJar="${rootDir}/jre/target/helidon-jre.jar"
    readonly jreLibs="${rootDir}/jre/target/libs"
    readonly jandexJar="${jreLibs}/jandex.jar"
    readonly jreDir="${rootDir}/jre/target/classes"
    readonly patchesDir="${rootDir}/etc/patches"
    readonly mainModule="helidon.jre"
    readonly modulesMainClass="io.helidon.jre.modules.ModulesLinker"
    readonly jarsMainClass="io.helidon.jre.jars.JarsLinker"

    [[ ${JAVA_11_HOME} ]] && javaHome=${JAVA_11_HOME} || javaHome=${JAVA_HOME}

    assertExists "${javaHome}/bin/java"
    assertExists ${agentJar}
    assertExists ${jreJar}
    jreModule=${mainModule}
    jrePath=${jreJar}
    appArgs="--cds --replace"
    unset jars
    unset dir

    while (( ${#} > 0 )); do
        case "${1}" in
            -h | --help) usage ;;
            -d | --debug) setDebug ;;
            --jars) jars=true ;;
            --dir) dir=true ;;
            *) appendVar appArgs ${1} ;;
        esac
        shift
    done

    if [[ ${jars} ]]; then
        [[ ${dir} ]] && jrePath=${jreDir}
        jrePath+=":${jandexJar}"
    else
        [[ -d ${patchesDir} ]] && appendVar appArgs "--patches ${patchesDir}" || fail "${patchesDir} not found"
        [[ ${dir} ]] && jreModule="${mainModule}/${modulesMainClass}"
        [[ ${dir} ]] && jrePath=${jreDir}
        jrePath+=":${jreLibs}"
    fi
}

setDebug() {
    if [[ ${JAVA_DEBUG} ]]; then
        appendVar jvmArgs "${JAVA_DEBUG}"
    else
        appendVar jvmArgs "-Xdebug -Xnoagent -Djava.compiler=none -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
    fi
}

assertExists() {
    [[ -e ${1} ]] || fail "${1} does not exist"
}

appendVar() {
    local var=${1}
    local value=${2}
    local sep=${3:- }
    export ${var}="${!var:+${!var}${sep}}${value}"
}

println() {
    printf "${1}\n" "${@:2}"
}

fail() {
    println "${1}"
    exit 1
}

main "$@"
